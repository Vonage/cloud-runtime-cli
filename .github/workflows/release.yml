name: Release CLI
on:
  push:
    tags:
      - '*'

permissions:
  actions: write
  checks: write
  contents: read
  deployments: read
  issues: write
  discussions: write
  packages: read
  pages: write
  pull-requests: write
  security-events: write
  statuses: write

jobs:
  build-and-release:
    runs-on: macos-latest
    env:
      API_VERSION: ${{ vars.API_VERSION }}
      TOKEN: ${{ secrets.ACCESS_TOKEN }}
    strategy:
      matrix:
        go-version: [1.24.0]
        os: [macos-latest]
    environment: vcr-cli
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Import codesign cert
        uses: apple-actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.APPLE_CERT_P12_BASE64_ENCODED }}
          p12-password: ${{ secrets.APPLE_CERT_PASSWORD }}

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Set up Docker
        run: |
          brew install docker docker-machine docker-compose

          sudo mkdir -p /usr/local/bin 
          sudo curl -L -o /usr/local/bin/colima https://github.com/abiosoft/colima/releases/download/v0.6.7/colima-Darwin-x86_64 && sudo chmod +x /usr/local/bin/colima
          brew install lima
          brew install qemu
          colima start

          sudo ln -sf $HOME/.colima/default/docker.sock /var/run/docker.sock

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/Library/Caches/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Store credentials
        run: |
          xcrun notarytool store-credentials --apple-id ${{ secrets.APPLE_ID }} --team-id ${{ secrets.APPLE_TEAM_ID }} --password ${{ secrets.APPLE_DEV_ID_PASSWORD }} devrel

      - name: Run unit tests
        run: go test ./...

      - name: Run integration tests
        run: |
          cd tests/integration
          docker-compose up --exit-code-from cli-tool

      - name: Cross compile binaries
        env:
          GO_LDFLAGS: "-s -w -X 'main.apiVersion=${{env.API_VERSION}}' -X 'main.version=${{github.ref_name}}' -X 'main.buildDate=${{github.event.repository.updated_at}}' -X 'main.commit=${{github.sha}}' -X 'main.releaseURL=https://api.github.com/repos/${{github.repository}}'"
        run: |
          GOOS=darwin GOARCH=amd64 CGO_ENABLED=0 go build -ldflags "$GO_LDFLAGS" -o vcr_darwin_amd64 .
          GOOS=darwin GOARCH=arm64 CGO_ENABLED=0 go build -ldflags "$GO_LDFLAGS" -o vcr_darwin_arm64 .
          GOOS=linux GOARCH=arm64 CGO_ENABLED=0 go build -ldflags "$GO_LDFLAGS" -o vcr_linux_arm64 .
          GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags "$GO_LDFLAGS" -o vcr_linux_amd64 .
          GOOS=windows GOARCH=amd64 CGO_ENABLED=0 go build -ldflags "$GO_LDFLAGS" -o vcr_windows_amd64.exe .

      - name: Code sign darwin binaries
        run: |
          codesign --timestamp --options=runtime -s "Developer ID Application: Nexmo Inc. (7F2B5ZSP8Q)" -v ./vcr_darwin_amd64
          codesign --timestamp --options=runtime -s "Developer ID Application: Nexmo Inc. (7F2B5ZSP8Q)" -v ./vcr_darwin_arm64

      - name: Check code signing
        run: |
          codesign -vvv --deep --strict ./vcr_darwin_amd64
          codesign -vvv --deep --strict ./vcr_darwin_arm64

      - name: Zip darwin binaries
        run: |
          zip vcr_darwin_amd64.zip ./vcr_darwin_amd64
          zip vcr_darwin_arm64.zip ./vcr_darwin_arm64

      - name: Notarize darwin binaries
        run: |
          xcrun notarytool submit vcr_darwin_amd64.zip --keychain-profile "devrel" --wait
          xcrun notarytool submit vcr_darwin_arm64.zip --keychain-profile "devrel" --wait

      - name: Compress binaries
        run: |
          mkdir bin
          tar czf bin/vcr_darwin_amd64.tar.gz ./vcr_darwin_amd64
          tar czf bin/vcr_darwin_arm64.tar.gz ./vcr_darwin_arm64
          tar czf bin/vcr_linux_arm64.tar.gz ./vcr_linux_arm64
          tar czf bin/vcr_linux_amd64.tar.gz ./vcr_linux_amd64
          tar czf bin/vcr_windows_amd64.tar.gz ./vcr_windows_amd64.exe

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ env.TOKEN }}
          files: |
            bin/vcr_darwin_amd64.tar.gz
            bin/vcr_darwin_arm64.tar.gz
            bin/vcr_linux_arm64.tar.gz
            bin/vcr_linux_amd64.tar.gz
            bin/vcr_windows_amd64.tar.gz

      - name: Test Github Action
        uses: Vonage/cloud-runtime-cli@main
